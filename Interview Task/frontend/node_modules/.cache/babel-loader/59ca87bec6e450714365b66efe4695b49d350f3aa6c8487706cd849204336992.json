{"ast":null,"code":"var _jsxFileName = \"/Users/jameschapman/Documents/Interview Task/frontend/src/DownloadResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { saveAs } from 'file-saver';\n\n// Define the interface for the data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadResults = () => {\n  _s();\n  // State to hold phone number details\n  const [phoneNumberDetails, setPhoneNumberDetails] = useState(null);\n  const downloadCSV = () => {\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n\n    // CSV Headers\n    const headers = \"IsValid,IsPossible,PhoneType,InternationalFormat\\n\";\n    csvContent += headers;\n\n    // Check if phone number details are available\n    if (phoneNumberDetails) {\n      const csvRow = [phoneNumberDetails.isValid, phoneNumberDetails.isPossible, phoneNumberDetails.phoneType, phoneNumberDetails.internationalFormat].join(\",\");\n      csvContent += csvRow + \"\\n\";\n    }\n\n    // Create a Blob and trigger the download\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    saveAs(blob, \"phoneNumberDetails.csv\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: downloadCSV,\n      disabled: !phoneNumberDetails,\n      children: \"Download CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(DownloadResults, \"eGamB5BRvxCm5F/hY42e25PmknE=\");\n_c = DownloadResults;\nexport default DownloadResults;\nvar _c;\n$RefreshReg$(_c, \"DownloadResults\");","map":{"version":3,"names":["React","useState","Button","saveAs","jsxDEV","_jsxDEV","DownloadResults","_s","phoneNumberDetails","setPhoneNumberDetails","downloadCSV","csvContent","headers","csvRow","isValid","isPossible","phoneType","internationalFormat","join","blob","Blob","type","children","variant","color","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jameschapman/Documents/Interview Task/frontend/src/DownloadResults.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { saveAs } from 'file-saver';\n\n// Define the interface for the data\ninterface PhoneNumberDetails {\n    isValid: boolean;\n    isPossible: boolean;\n    phoneType: string;\n    internationalFormat: string;\n}\n\nconst DownloadResults = () => {\n    // State to hold phone number details\n    const [phoneNumberDetails, setPhoneNumberDetails] = useState<PhoneNumberDetails | null>(null);\n\n    const downloadCSV = () => {\n        let csvContent = \"data:text/csv;charset=utf-8,\";\n\n        // CSV Headers\n        const headers = \"IsValid,IsPossible,PhoneType,InternationalFormat\\n\";\n        csvContent += headers;\n\n        // Check if phone number details are available\n        if (phoneNumberDetails) {\n            const csvRow = [\n                phoneNumberDetails.isValid,\n                phoneNumberDetails.isPossible,\n                phoneNumberDetails.phoneType,\n                phoneNumberDetails.internationalFormat\n            ].join(\",\");\n            csvContent += csvRow + \"\\n\";\n        }\n\n        // Create a Blob and trigger the download\n        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n        saveAs(blob, \"phoneNumberDetails.csv\");\n    };\n\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={downloadCSV} disabled={!phoneNumberDetails}>\n                Download CSV\n            </Button>\n        </div>\n    );\n}\n\nexport default DownloadResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,MAAM,QAAQ,YAAY;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAA4B,IAAI,CAAC;EAE7F,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIC,UAAU,GAAG,8BAA8B;;IAE/C;IACA,MAAMC,OAAO,GAAG,oDAAoD;IACpED,UAAU,IAAIC,OAAO;;IAErB;IACA,IAAIJ,kBAAkB,EAAE;MACpB,MAAMK,MAAM,GAAG,CACXL,kBAAkB,CAACM,OAAO,EAC1BN,kBAAkB,CAACO,UAAU,EAC7BP,kBAAkB,CAACQ,SAAS,EAC5BR,kBAAkB,CAACS,mBAAmB,CACzC,CAACC,IAAI,CAAC,GAAG,CAAC;MACXP,UAAU,IAAIE,MAAM,GAAG,IAAI;IAC/B;;IAEA;IACA,MAAMM,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACT,UAAU,CAAC,EAAE;MAAEU,IAAI,EAAE;IAA0B,CAAC,CAAC;IACxElB,MAAM,CAACgB,IAAI,EAAE,wBAAwB,CAAC;EAC1C,CAAC;EAED,oBACId,OAAA;IAAAiB,QAAA,eACIjB,OAAA,CAACH,MAAM;MAACqB,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEf,WAAY;MAACgB,QAAQ,EAAE,CAAClB,kBAAmB;MAAAc,QAAA,EAAC;IAEjG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAvB,EAAA,CAlCKD,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAoCrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}