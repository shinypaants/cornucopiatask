{"ast":null,"code":"var _jsxFileName = \"/Users/jameschapman/Documents/Interview Task/frontend/src/CountriesList.tsx\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountriesList() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.get('/country/supported');\n        setCountries(response.data);\n      } catch (error) {\n        console.error('Error fetching countries', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n  function StickyHeadTable() {\n    _s();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \" Supported Countries \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: countries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(country => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: country\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 29\n                }, this)\n              }, country, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 100],\n          component: \"div\",\n          count: countries.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n  _s(StickyHeadTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n}\n_s2(CountriesList, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = CountriesList;\nexport default CountriesList;\nvar _c;\n$RefreshReg$(_c, \"CountriesList\");","map":{"version":3,"names":["useState","useEffect","axios","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Paper","React","jsxDEV","_jsxDEV","CountriesList","_s2","_s","$RefreshSig$","countries","setCountries","fetchCountries","response","get","data","error","console","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","children","component","sx","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","country","hover","role","tabIndex","scope","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/jameschapman/Documents/Interview Task/frontend/src/CountriesList.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport React from 'react';\n\nfunction CountriesList() {\n    const [countries, setCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchCountries = async () => {\n            try {\n                const response = await axios.get('/country/supported');\n                setCountries(response.data);\n            } catch (error) {\n                console.error('Error fetching countries', error);\n            }\n        };\n\n        fetchCountries();\n    }, []);\n\n\n    function StickyHeadTable() {\n        const [page, setPage] = React.useState(0);\n        const [rowsPerPage, setRowsPerPage] = React.useState(10);\n      \n        const handleChangePage = (event: unknown, newPage: number) => {\n          setPage(newPage);\n        };\n      \n        const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n          setRowsPerPage(+event.target.value);\n          setPage(0);\n        };\n    \n\n    return (\n        <div>\n            <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell> Supported Countries </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {countries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((country) => {\n                        return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={country}>\n                            <TableCell component=\"th\" scope=\"row\">\n                            {country}\n                            </TableCell>\n                        </TableRow>\n                    );\n                        })}\n                </TableBody>\n                </Table>\n                <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={countries.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n            </TableContainer>\n        </div>\n    );\n}\n}\nexport default CountriesList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}