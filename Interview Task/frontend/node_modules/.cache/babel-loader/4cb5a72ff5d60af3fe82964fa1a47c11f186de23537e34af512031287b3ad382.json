{"ast":null,"code":"var _jsxFileName = \"/Users/jameschapman/Documents/Interview Task/frontend/src/CountriesList.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountriesList() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.get('/country/supported');\n        setCountries(response.data);\n      } catch (error) {\n        console.error('Error fetching countries', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 450\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: [\" Supported Countries\", /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\" Supported Countries\", /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \" Supported Countries \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: countries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(country => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)\n            }, country, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: countries.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(CountriesList, \"AoOz5xpObPfz22TK4RuTESJWZe4=\");\n_c = CountriesList;\nexport default CountriesList;\nvar _c;\n$RefreshReg$(_c, \"CountriesList\");","map":{"version":3,"names":["useState","useEffect","axios","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Paper","React","jsxDEV","_jsxDEV","CountriesList","_s","countries","setCountries","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchCountries","response","get","data","error","console","children","component","sx","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","country","hover","role","tabIndex","scope","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/jameschapman/Documents/Interview Task/frontend/src/CountriesList.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport React from 'react';\n\nfunction CountriesList() {\n    const [countries, setCountries] = useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  \n    const handleChangePage = (event: unknown, newPage: number) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    };\n    useEffect(() => {\n        const fetchCountries = async () => {\n            try {\n                const response = await axios.get('/country/supported');\n                setCountries(response.data);\n            } catch (error) {\n                console.error('Error fetching countries', error);\n            }\n        };\n\n        fetchCountries();\n    }, []);\n\n    \n\n    return (\n        <div>\n            <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 450 }} aria-label=\"simple table\">\n                <TableHead> Supported Countries \n                    <TableRow> Supported Countries\n                        <TableCell> Supported Countries </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {countries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((country) => {\n                        return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={country}>\n                            <TableCell component=\"th\" scope=\"row\">\n                            {country}\n                            </TableCell>\n                        </TableRow>\n                    );\n                        })}\n                </TableBody>\n                </Table>\n                <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={countries.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n            </TableContainer>\n        </div>\n    );\n}\n\nexport default CountriesList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}