{"ast":null,"code":"var _jsxFileName = \"/Users/jameschapman/Documents/Interview Task/frontend/src/CountriesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { List, ListItem } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountriesList() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.get('/country/supported');\n        setCountries(response.data);\n      } catch (error) {\n        console.error('Error fetching countries', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supported Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        alignItems: \"flex-start\"\n      }, country, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(CountriesList, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = CountriesList;\nexport default CountriesList;\nvar _c;\n$RefreshReg$(_c, \"CountriesList\");","map":{"version":3,"names":["React","useState","useEffect","axios","List","ListItem","jsxDEV","_jsxDEV","CountriesList","_s","countries","setCountries","fetchCountries","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","country","divider","alignItems","_c","$RefreshReg$"],"sources":["/Users/jameschapman/Documents/Interview Task/frontend/src/CountriesList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { List, ListItem } from '@mui/material';\n\nfunction CountriesList() {\n    const [countries, setCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchCountries = async () => {\n            try {\n                const response = await axios.get('/country/supported');\n                setCountries(response.data);\n            } catch (error) {\n                console.error('Error fetching countries', error);\n            }\n        };\n\n        fetchCountries();\n    }, []);\n\n    return (\n        <div>\n            <h2>Supported Countries</h2>\n            <List>\n                {countries.map(country => (\n                    <ListItem key={country} divider alignItems='flex-start'/>\n                ))}\n            </List>\n        </div>\n    );\n}\n\nexport default CountriesList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,oBAAoB,CAAC;QACtDH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDJ,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bf,OAAA,CAACH,IAAI;MAAAc,QAAA,EACAR,SAAS,CAACa,GAAG,CAACC,OAAO,iBAClBjB,OAAA,CAACF,QAAQ;QAAeoB,OAAO;QAACC,UAAU,EAAC;MAAY,GAAxCF,OAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACb,EAAA,CA1BQD,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AA4BtB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}